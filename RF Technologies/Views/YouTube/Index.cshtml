@model YouTubeViewModel

@{
    ViewData["Title"] = "YouTube Channel Details";
}

<style>
    .channel-header {
        text-align: center;
        margin-bottom: 20px;
    }

        .channel-header h2 {
            font-size: 2em;
            margin: 10px 0;
        }

    .channel-stats {
        display: flex;
        justify-content: space-around;
        margin-bottom: 30px;
    }

        .channel-stats p {
            font-size: 1.2em;
            margin: 5px 0;
        }

    .section {
        margin-bottom: 40px;
    }

        .section h3 {
            font-size: 1.5em;
            margin-bottom: 15px;
        }

    .video-list, .playlist-list {
        list-style-type: none;
        padding: 0;
    }

        .video-list li, .playlist-list li {
            margin-bottom: 30px;
            display: flex;
            align-items: center;
        }

    .embed-responsive {
        width: 320px;
        height: 180px;
        overflow: hidden;
        flex-shrink: 0;
    }

    .embed-responsive-item {
        width: 100%;
        height: 100%;
        border: 0;
    }

    .video-title {
        font-size: 1.1em;
        margin-left: 20px;
    }

    .about-section {
        margin: 20px auto;
        text-align: center;
    }

        .about-section p {
            font-size: 1.2em;
        }
</style>

<div class="container pt-4" style="margin-top: 7rem;">
    <div class="channel-header">
        <h2>@Model.ChannelTitle</h2>
        <div>
            <img src="@Model.ChannelThumbnails.Default" alt="Channel Thumbnail" />
        </div>
        @* <p>@Model.Description</p> *@
        <div class="channel-stats">
            <p>Subscribers: @Model.SubscriberCount</p>
            <p>Total Views: @Model.TotalViews</p>
            <p>Videos: @Model.VideoCount</p>
        </div>
    </div>

    <div class="about-section">
        <p>Welcome to @Model.ChannelTitle! Stay tuned and subscribe for the latest updates.@Model.Keywords</p>
    </div>

    <div class="section">
        <h1>Latest Videos</h1>
        <ul class="video-list">
            @if (Model.Videos != null && Model.Videos.Any())
            {
                @foreach (var video in Model.Videos)
                {
                    <li>
                        <div class="embed-responsive">
                            <iframe class="embed-responsive-item" src="https://www.youtube.com/embed/@video.VideoId" allowfullscreen></iframe>
                        </div>
                        <div class="video-title">
                            <h4>@video.Title</h4>
                            @* <p>@video.Description</p> *@
                            <p>Published: @video.PublishedAt?.ToString("MMM dd, yyyy")</p>
                        </div>
                    </li>
                }
            }
            else
            {
                <p>No videos available.</p>
            }
        </ul>
    </div>

    <div class="section">
        <h1>Playlists</h1>
        <ul class="playlist-list">
            @if (Model.Playlists != null && Model.Playlists.Any())
            {
                @foreach (var playlist in Model.Playlists)
                {
                    <li>
                        <a href="https://www.youtube.com/playlist?list=@playlist.PlaylistId" target="_blank">
                            <img src="@playlist.Thumbnails.Medium" alt="@playlist.Title" />
                            <h4>@playlist.Title</h4>
                           @*  <p>@playlist.Description</p> *@
                        </a>
                    </li>
                }
            }
            else
            {
                <p>No playlists available.</p>
            }
        </ul>
    </div>

   @*  <div class="section">
        <h3>Live Broadcast</h3>
        @if (Model.LiveBroadcastDetails != null)
        {
            <div>
                <h4>@Model.LiveBroadcastDetails.Title</h4>
                <p>@Model.LiveBroadcastDetails.Description</p>
                <p>Scheduled Start: @Model.LiveBroadcastDetails.ScheduledStartTime?.ToString("MMM dd, yyyy hh:mm tt")</p>
                <p>Actual Start: @Model.LiveBroadcastDetails.ActualStartTime?.ToString("MMM dd, yyyy hh:mm tt")</p>
                <p>Status: @Model.LiveBroadcastDetails.StreamStatus</p>
            </div>
        }
        else
        {
            <p>No live broadcast available.</p>
        }
    </div> *@
</div>
