name: Build and Deploy to Azure VM

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up .NET environment
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0 # Specify .NET Core 8

    # Step 3: Restore dependencies
    - name: Restore dependencies
      run: dotnet restore "RF Technologies/RF Technologies.sln"

    # Step 4: Build the application
    - name: Build the application
      run: dotnet build "RF Technologies/RF Technologies.sln" --configuration Release

    # Step 5: Publish the application
    - name: Publish the application
      run: dotnet publish "RF Technologies/RF Technologies.sln" -c Release -o ./publish

    # Step 6: Deploy files to Azure VM using SCP
    - name: Deploy to Azure VM
      uses: appleboy/scp-action@v0.2.0
      with:
        host: ${{ secrets.AZURE_VM_IP }}             # Replace with your Azure VM IP secret
        username: ${{ secrets.AZURE_VM_USERNAME }}   # Replace with your Azure VM username secret
        key: ${{ secrets.AZURE_VM_PRIVATE_KEY }}     # SSH private key for authentication
        source: ./publish/                           # Path to the published application
        target: /var/www/your-app/                   # Target directory on the Azure VM

    # Step 7: Restart the application on the VM (optional)
    - name: Restart application on Azure VM
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.AZURE_VM_IP }}
        username: ${{ secrets.AZURE_VM_USERNAME }}
        key: ${{ secrets.AZURE_VM_PRIVATE_KEY }}
        script: |
          sudo systemctl restart kestrel-your-app.service || \
          nohup dotnet /var/www/your-app/YourApp.dll > /dev/null 2>&1 &
